[gd_scene load_steps=8 format=2]

[ext_resource path="res://assets/font/arcadeclassic/ARCADECLASSIC.TTF" type="DynamicFontData" id=1]
[ext_resource path="res://src/Audio/BgMusicPlayer.tscn" type="PackedScene" id=2]
[ext_resource path="res://assets/img/Screens/04(1).jpg" type="Texture" id=3]
[ext_resource path="res://assets/img/github-icon.png" type="Texture" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends Control


func _ready() -> void:
	run_requests()


func run_requests() -> void:
	var bharathcs_img : HTTPRequest = HTTPRequest.new()
	add_child(bharathcs_img)
	bharathcs_img.request(\"https://github.com/bharathcs.png\")
	bharathcs_img.connect(\"request_completed\", self, \"_on_bharathcs_img_request_completed\")

	var bluntsord_img : HTTPRequest = HTTPRequest.new()
	add_child(bluntsord_img)
	bluntsord_img.request(\"https://github.com/bluntsord.png\")
	bluntsord_img.connect(\"request_completed\", self, \"_bluntsord_img_request_completed\")

	var huangjunye_img : HTTPRequest = HTTPRequest.new()
	add_child(huangjunye_img)
	huangjunye_img.request(\"https://github.com/HuangJunye.png\")
	huangjunye_img.connect(\"request_completed\", self, \"_huangjunye_img_request_completed\")

	var qd_org_img : HTTPRequest = HTTPRequest.new()
	add_child(qd_org_img)
	qd_org_img.request(\"https://github.com/quantum-defence.png\")
	qd_org_img.connect(\"request_completed\", self, \"_quantum_defence_img_request_completed\")


func _on_bharathcs_img_request_completed(result, response_code, headers, body):
	_handle_image(result, response_code, headers, body, \"bharathcs\")


func _bluntsord_img_request_completed(result, response_code, headers, body):
	_handle_image(result, response_code, headers, body, \"bluntsord\")


func _huangjunye_img_request_completed(result, response_code, headers, body):
	_handle_image(result, response_code, headers, body, \"huangjunye\")


func _quantum_defence_img_request_completed(result, response_code, headers, body):
	_handle_image(result, response_code, headers, body, \"quantum_defence\")


func _handle_image(result, response_code, headers, body, name):
	var image = Image.new()
	if \"Content-Type: image/png\" in headers:
		image.load_png_from_buffer(body)
	elif \"Content-Type: image/jpeg\" in headers:
		image.load_jpg_from_buffer(body)
	elif \"Content-Type: image/jpg\" in headers:
		image.load_jpg_from_buffer(body)
	elif \"Content-Type: image/bmp\" in headers:
		image.load_bmp_from_buffer(body)
	var texture := ImageTexture.new()
	texture.create_from_image(image)
	var btn : Button = get_node(\"VBoxContainer/Avatars/\" + name)
	btn.icon = texture
	return texture


func _on_DoneButton_pressed() -> void:
	var loaded = load(\"res://src/ui/Menu/Menu.tscn\").instance()
	var root = get_tree().get_root()
	root.add_child(loaded)
	root.remove_child(self)
	self.queue_free()


func _on_avatar_pressed(username: String) -> void:
	OS.shell_open(\"http://github.com/\" + username)

"

[sub_resource type="DynamicFont" id=2]
size = 80
font_data = ExtResource( 1 )

[sub_resource type="DynamicFont" id=3]
size = 23
font_data = ExtResource( 1 )

[node name="Credits" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="."]
modulate = Color( 0.329412, 0.329412, 0.329412, 1 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 3 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="BgMusicPlayer" parent="." instance=ExtResource( 2 )]
choice = 8

[node name="VBoxContainer" type="VBoxContainer" parent="."]
process_priority = 1
margin_left = 560.0
margin_top = 300.0
margin_right = 960.0
margin_bottom = 500.0
rect_scale = Vector2( 2, 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HeaderLabel" type="RichTextLabel" parent="VBoxContainer"]
margin_right = 400.0
margin_bottom = 82.0
custom_fonts/normal_font = SubResource( 2 )
text = "Credits"
fit_content_height = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Text" type="RichTextLabel" parent="VBoxContainer"]
margin_top = 86.0
margin_right = 400.0
margin_bottom = 281.0
text = "Copyright (c) 2021 Bharath Chandra Sudheer and Yeo Tee Chin


This is an open-source project released under MIT License: 



Developers: 

Special Thanks: 


"
fit_content_height = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Avatars" type="Control" parent="VBoxContainer"]
margin_top = 285.0
margin_right = 400.0
margin_bottom = 285.0

[node name="bharathcs" type="Button" parent="VBoxContainer/Avatars"]
margin_left = 84.0
margin_top = -103.0
margin_right = 184.0
margin_bottom = -79.0
text = "bharathcs"
icon = ExtResource( 4 )
align = 2
expand_icon = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="bluntsord" type="Button" parent="VBoxContainer/Avatars"]
margin_left = 192.0
margin_top = -103.0
margin_right = 292.0
margin_bottom = -79.0
text = "Bluntsord"
icon = ExtResource( 4 )
align = 2
expand_icon = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="huangjunye" type="Button" parent="VBoxContainer/Avatars"]
margin_left = 104.0
margin_top = -71.0
margin_right = 216.0
margin_bottom = -47.0
text = "HuangJunye"
icon = ExtResource( 4 )
align = 2
expand_icon = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="quantum_defence" type="Button" parent="VBoxContainer/Avatars"]
margin_top = -135.0
margin_right = 152.0
margin_bottom = -111.0
text = "quantum-defence"
icon = ExtResource( 4 )
align = 2
expand_icon = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="VBoxContainer"]
margin_top = 289.0
margin_right = 400.0
margin_bottom = 319.0

[node name="DoneButton" type="Button" parent="VBoxContainer/CenterContainer"]
margin_left = 168.0
margin_right = 232.0
margin_bottom = 30.0
grow_vertical = 0
custom_fonts/font = SubResource( 3 )
text = "Back"
__meta__ = {
"_edit_use_anchors_": false
}

[connection signal="pressed" from="VBoxContainer/Avatars/bharathcs" to="." method="_on_avatar_pressed" binds= [ "bharathcs" ]]
[connection signal="pressed" from="VBoxContainer/Avatars/bluntsord" to="." method="_on_avatar_pressed" binds= [ "Bluntsord" ]]
[connection signal="pressed" from="VBoxContainer/Avatars/huangjunye" to="." method="_on_avatar_pressed" binds= [ "HuangJunye" ]]
[connection signal="pressed" from="VBoxContainer/Avatars/quantum_defence" to="." method="_on_avatar_pressed" binds= [ "quantum-defence" ]]
[connection signal="pressed" from="VBoxContainer/CenterContainer/DoneButton" to="." method="_on_DoneButton_pressed"]
